# Konstraint Builder image
FROM registry.access.redhat.com/ubi9/go-toolset@sha256:d1c1f2af6122b0ea3456844210d6d9c4d96e78c128bc02fabeadf51239202221 AS konstraint

# renovate: datasource=github-releases depName=plexsystems/konstraint
ARG KONSTRAINT_VERSION=v0.42.0

# go1.23 not released yet - so need to manually upgrade
USER root
RUN curl -L -o /tmp/go1.23.linux-amd64.tar.gz https://go.dev/dl/go1.23.0.linux-amd64.tar.gz && \
    tar -xzf /tmp/go1.23.linux-amd64.tar.gz && \
    mv go /usr/local && \
    PATH="/usr/local/go/bin:$PATH" && \
    go version

RUN PATH="/usr/local/go/bin:$PATH" go install github.com/plexsystems/konstraint@${KONSTRAINT_VERSION} && \
    mv ~/go/bin/konstraint /tmp/konstraint && \
    /tmp/konstraint --help

USER 1001

# Builder image
FROM registry.access.redhat.com/ubi9/ubi:9.5-1745854298@sha256:f4ebd46d3ba96feb016d798009e1cc2404c3a4ebdac8b2479a2ac053e59f41b4 AS builder

# renovate: datasource=github-releases depName=helm/helm
ARG HELM_VERSION=v3.18.6
# renovate: datasource=github-releases depName=stedolan/jq
ARG JQ_VERSION=1.6
# renovate: datasource=repology depName=homebrew/openshift-cli
ARG OC_VERSION=4.19.9
# renovate: datasource=github-releases depName=open-policy-agent/opa
ARG OPA_VERSION=v1.8.0
# renovate: datasource=github-releases depName=open-policy-agent/conftest
ARG CONFTEST_VERSION=v0.59.0
# renovate: datasource=github-releases depName=instrumenta/kubeval
ARG KUBEVAL_VERSION=latest

SHELL ["/bin/bash", "-c"]

RUN curl -L -o /tmp/helm-${HELM_VERSION}-linux-amd64.tar.gz https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz && \
    tar -C /tmp -xzf /tmp/helm-${HELM_VERSION}-linux-amd64.tar.gz && \
    /tmp/linux-amd64/helm version

RUN curl -L -o /tmp/jq-linux64 https://github.com/stedolan/jq/releases/download/jq-${JQ_VERSION}/jq-linux64 && \
    chmod +x /tmp/jq-linux64 && \
    /tmp/jq-linux64 --version

RUN curl -L -o /tmp/openshift-client-linux.tar.gz https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OC_VERSION}/openshift-client-linux.tar.gz && \
    tar -C /tmp -xzf /tmp/openshift-client-linux.tar.gz && \
    /tmp/oc version --client && \
    /tmp/kubectl version --client

RUN curl -L -o /tmp/opa_linux_amd64 https://github.com/open-policy-agent/opa/releases/download/${OPA_VERSION}/opa_linux_amd64 && \
    chmod +x /tmp/opa_linux_amd64 && \
    /tmp/opa_linux_amd64 --help

RUN curl -L -o /tmp/conftest_${CONFTEST_VERSION}_Linux_x86_64.tar.gz https://github.com/open-policy-agent/conftest/releases/download/${CONFTEST_VERSION}/conftest_${CONFTEST_VERSION//v}_Linux_x86_64.tar.gz && \
    tar -C /tmp -xzf /tmp/conftest_${CONFTEST_VERSION}_Linux_x86_64.tar.gz && \
    /tmp/conftest --version

RUN curl -L -o /tmp/kubeval-linux-amd64.tar.gz https://github.com/instrumenta/kubeval/releases/${KUBEVAL_VERSION}/download/kubeval-linux-amd64.tar.gz && \
    tar -C /tmp -xzf /tmp/kubeval-linux-amd64.tar.gz && \
    /tmp/kubeval --version

# Runnable image
FROM registry.access.redhat.com/ubi9/python-39:9.5-1745995112@sha256:59f3aa83a24152eeee04c27d4cc5c2b9f50519a67acc153cdb382ac914f3d503

# renovate: datasource=github-releases depName=bats-core/bats-core
ARG BATS_VERSION=master

LABEL version="4.0.0"
LABEL repository="http://github.com/redhat-cop/github-actions"
LABEL homepage="http://github.com/redhat-cop/github-actions/confbatstest"
LABEL maintainer="Red Hat CoP"
LABEL "com.github.actions.name"="confbatstest"
LABEL "com.github.actions.description"="Run conftest using BATS"
LABEL "com.github.actions.branding.icon"="monitor"
LABEL "com.github.actions.branding.color"="purple"

COPY --from=builder /tmp/linux-amd64/helm /usr/local/bin/helm
RUN helm version

COPY --from=builder /tmp/jq-linux64 /usr/local/bin/jq
RUN jq --version

COPY --from=builder /tmp/oc /usr/local/bin/oc
COPY --from=builder /tmp/kubectl /usr/local/bin/kubectl
RUN oc version --client && \
    kubectl version --client

COPY --from=builder /tmp/opa_linux_amd64 /usr/local/bin/opa
RUN opa --help

COPY --from=builder /tmp/conftest /usr/local/bin/conftest
RUN conftest --version

COPY --from=builder /tmp/kubeval /usr/local/bin/kubeval
RUN kubeval --version

COPY --from=konstraint /tmp/konstraint /usr/local/bin/konstraint
RUN konstraint --help

USER root

RUN dnf upgrade --assumeyes && \
    dnf install --assumeyes --nodocs findutils diffutils bc && \
    dnf clean all && \
    git --version && \
    diff --version && \
    bc --version

RUN curl -L -o /tmp/${BATS_VERSION}.tar.gz https://github.com/bats-core/bats-core/archive/${BATS_VERSION}.tar.gz && \
    tar -C /tmp -xzf /tmp/${BATS_VERSION}.tar.gz && \
    /tmp/bats-core-${BATS_VERSION}/install.sh /tmp/bats && \
    ln -s /tmp/bats/bin/bats /usr/local/bin/bats && \
    bats --version

USER 1001

COPY requirements.txt /requirements.txt
RUN pip3 install --require-hashes --no-deps --no-cache-dir -r /requirements.txt && \
    yq --version

COPY entrypoint.sh /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
